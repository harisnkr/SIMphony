{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-native-paper/src/components/RadioButton.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RadioButtonGroup, { RadioButtonContext } from \"./RadioButtonGroup\";\nimport RadioButtonAndroid from \"./RadioButtonAndroid\";\nimport RadioButtonIOS from \"./RadioButtonIOS\";\nimport { withTheme } from \"../core/theming\";\n\nvar RadioButton = function (_React$Component) {\n  _inherits(RadioButton, _React$Component);\n\n  function RadioButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RadioButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RadioButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handlePress = function (context) {\n      var onPress = _this.props.onPress;\n      var onValueChange = context ? context.onValueChange : function () {};\n      onPress ? onPress() : onValueChange(_this.props.value);\n    };\n\n    _this.isChecked = function (context) {\n      return context.value === _this.props.value ? 'checked' : 'unchecked';\n    };\n\n    return _this;\n  }\n\n  _createClass(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Button = Platform.select({\n        default: RadioButtonAndroid,\n        ios: RadioButtonIOS\n      });\n      return React.createElement(RadioButtonContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, function (context) {\n        return React.createElement(Button, _extends({}, _this2.props, {\n          status: _this2.props.status || context && _this2.isChecked(context),\n          onPress: function onPress() {\n            return _this2.handlePress(context);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }));\n      });\n    }\n  }]);\n\n  return RadioButton;\n}(React.Component);\n\nRadioButton.Group = RadioButtonGroup;\nRadioButton.Android = RadioButtonAndroid;\nRadioButton.IOS = RadioButtonIOS;\nexport default withTheme(RadioButton);","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","React","Component","Group","RadioButtonGroup","Android","RadioButtonAndroid","IOS","RadioButtonIOS","handlePress","onPress","onValueChange","context","isChecked","Button","Platform","default","ios","withTheme"],"mappings":";;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,OAAA,gBAAA,IAAA,kBAAA;AAIA,OAAA,kBAAA;AAIA,OAAA,cAAA;AAIA,SAAA,SAAA;;AAwFMA,IAAAA,W;;;;;;;;;;;;;;;;UAUJS,W,GAAc,UAAA,OAAA,EAAqC;AAAA,UACzCC,OADyC,GAC7B,KAAA,CAD6B,KAC7B,CAD6B,OAAA;AAEjD,UAAMC,aAAa,GAAGC,OAAO,GAAGA,OAAO,CAAV,aAAA,GAA2B,YAAM,CAA9D,CAAA;AAEAF,MAAAA,OAAO,GAAGA,OAAH,EAAA,GAAeC,aAAa,CAAC,KAAA,CAAA,KAAA,CAApCD,KAAmC,CAAnCA;;;UAGFG,S,GAAY,UAAA,OAAA,EAAA;AAAA,aACVD,OAAO,CAAPA,KAAAA,KAAkB,KAAA,CAAA,KAAA,CAAlBA,KAAAA,GAAAA,SAAAA,GADU,WAAA;;;;;;;;6BAGH;AAAA,UAAA,MAAA,GAAA,IAAA;;AACP,UAAME,MAAM,GAAGC,QAAQ,CAARA,MAAAA,CAAgB;AAC7BC,QAAAA,OAAO,EADsB,kBAAA;AAE7BC,QAAAA,GAAG,EAFL;AAA+B,OAAhBF,CAAf;AAKA,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACG,UAAA,OAAA,EAAO;AAAA,eACN,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EACM,MAAI,CADV,KAAA,EAAA;AAEE,UAAA,MAAM,EAAE,MAAI,CAAJ,KAAA,CAAA,MAAA,IAAsBH,OAAO,IAAI,MAAI,CAAJ,SAAA,CAF3C,OAE2C,CAF3C;AAGE,UAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,mBAAM,MAAI,CAAJ,WAAA,CAAN,OAAM,CAAN;AAHX,WAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EADM;AACN;AAAA,SAAA,CAAA,CADM;AAFZ,OACE,CADF;;;;;EA1BsBX,KAAK,CAACC,S,CAA1BF;;AAAAA,W,CAEGG,KAFHH,GAEWI,gBAFXJ;AAAAA,W,CAKGK,OALHL,GAKaM,kBALbN;AAAAA,W,CAQGO,GARHP,GAQSQ,cARTR;AAwCN,eAAekB,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup, {\n  RadioButtonContext,\n  RadioButtonContextType,\n} from './RadioButtonGroup';\nimport RadioButtonAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  RadioButtonAndroid as _RadioButtonAndroid,\n} from './RadioButtonAndroid';\nimport RadioButtonIOS, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  RadioButtonIOS as _RadioButtonIOS,\n} from './RadioButtonIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  handlePress = (context: RadioButtonContextType) => {\n    const { onPress } = this.props;\n    const onValueChange = context ? context.onValueChange : () => {};\n\n    onPress ? onPress() : onValueChange(this.props.value);\n  };\n\n  isChecked = (context: RadioButtonContextType) =>\n    context.value === this.props.value ? 'checked' : 'unchecked';\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return (\n      <RadioButtonContext.Consumer>\n        {context => (\n          <Button\n            {...this.props}\n            status={this.props.status || (context && this.isChecked(context))}\n            onPress={() => this.handlePress(context)}\n          />\n        )}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"module"}