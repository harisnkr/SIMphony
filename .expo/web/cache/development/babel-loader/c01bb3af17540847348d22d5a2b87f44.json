{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\haria\\\\SIMphony\\\\src\\\\pages\\\\RegisterScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as firebase from \"firebase\";\n\nvar RegisterScreen = function (_React$Component) {\n  _inherits(RegisterScreen, _React$Component);\n\n  function RegisterScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      simstudentno: \"\",\n      errorMessage: null\n    };\n\n    _this.handleSignUp = function () {\n      firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (userCredentials) {\n        return userCredentials.user.updateProfile({\n          displayName: _this.state.name\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          errorMessage: error.message\n        });\n      });\n      firebase.database().ref('students/ ' + _this.state.simstudentno).set({\n        name: _this.state.name,\n        email: _this.state.email,\n        password: _this.state.password\n      }).then(function () {\n        console.log('Inserted!');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }), React.createElement(Text, {\n        style: styles.greeting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, \"Hey there, new tester!\\nSign up to get started.\"), React.createElement(View, {\n        style: styles.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, this.state.errorMessage && React.createElement(Text, {\n        style: styles.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, this.state.errorMessage)), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, \"Full Name\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, \"SIM student number (e.g. 10184527)\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(simstudentno) {\n          return _this2.setState({\n            simstudentno: simstudentno\n          });\n        },\n        value: this.state.simstudentno,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, \"Email Address\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        }\n      }, \"Password\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.handleSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }, \"Sign up\")), React.createElement(TouchableOpacity, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#fff\",\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, \"Already have an tester account? \", React.createElement(Text, {\n        style: {\n          fontWeight: \"500\",\n          color: \"#009862\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return RegisterScreen;\n}(React.Component);\n\nexport { RegisterScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#424242'\n  },\n  greeting: {\n    color: '#fff',\n    marginTop: 32,\n    fontSize: 18,\n    fontWeight: \"400\",\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    height: 72,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginHorizontal: 30\n  },\n  error: {\n    color: \"#E9446A\",\n    fontSize: 13,\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  form: {\n    marginBottom: 48,\n    marginHorizontal: 30\n  },\n  inputTitle: {\n    color: \"#8A8F9E\",\n    fontSize: 10,\n    textTransform: \"uppercase\"\n  },\n  input: {\n    borderBottomColor: \"#8A8F9E\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    height: 40,\n    fontSize: 15,\n    color: \"#161F3D\"\n  },\n  button: {\n    marginHorizontal: 30,\n    backgroundColor: \"#009862\",\n    borderRadius: 4,\n    height: 52,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/haria/SIMphony/src/pages/RegisterScreen.js"],"names":["React","firebase","RegisterScreen","state","name","email","password","simstudentno","errorMessage","handleSignUp","auth","createUserWithEmailAndPassword","then","userCredentials","user","updateProfile","displayName","catch","error","setState","message","database","ref","set","console","log","styles","container","marginTop","greeting","form","inputTitle","input","button","color","fontWeight","alignSelf","fontSize","Component","StyleSheet","create","flex","backgroundColor","textAlign","height","alignItems","justifyContent","marginHorizontal","marginBottom","textTransform","borderBottomColor","borderBottomWidth","hairlineWidth","borderRadius"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;IAEqBC,c;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,YAAY,EAAE,EAJV;AAKJC,MAAAA,YAAY,EAAE;AALV,K;;UAQRC,Y,GAAe,YAAM;AACjBR,MAAAA,QAAQ,CACHS,IADL,GAEKC,8BAFL,CAEoC,MAAKR,KAAL,CAAWE,KAF/C,EAEsD,MAAKF,KAAL,CAAWG,QAFjE,EAGKM,IAHL,CAGU,UAAAC,eAAe,EAAI;AACrB,eAAOA,eAAe,CAACC,IAAhB,CAAqBC,aAArB,CAAmC;AACtCC,UAAAA,WAAW,EAAE,MAAKb,KAAL,CAAWC;AADc,SAAnC,CAAP;AAGH,OAPL,EAQKa,KARL,CAQW,UAAAC,KAAK;AAAA,eAAI,MAAKC,QAAL,CAAc;AAAEX,UAAAA,YAAY,EAAEU,KAAK,CAACE;AAAtB,SAAd,CAAJ;AAAA,OARhB;AAgBAnB,MAAAA,QAAQ,CAACoB,QAAT,GAAoBC,GAApB,CAAwB,eAAc,MAAKnB,KAAL,CAAWI,YAAjD,EAA+DgB,GAA/D,CACI;AACInB,QAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC,IADrB;AAEIC,QAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE,KAFtB;AAGIC,QAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWG;AAHzB,OADJ,EAOEM,IAPF,CAOO,YAAM;AACTY,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OATD,EASGR,KATH,CASS,UAACC,KAAD,EAAW;AAChBM,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,OAXD;AAaH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA,2DAJJ,EAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAAClB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,CAAWK,YAAX,IAA2B,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEkB,MAAM,CAACR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKf,KAAL,CAAWK,YAAvC,CADhC,CANJ,EAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEkB,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,YAAY,EAAE,sBAAA5B,IAAI;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEf,YAAAA,IAAI,EAAJA;AAAF,WAAd,CAAJ;AAAA,SAHtB;AAII,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,IAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEwB,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,YAAY,EAAE,sBAAAzB,YAAY;AAAA,iBAAI,MAAI,CAACY,QAAL,CAAc;AAAEZ,YAAAA,YAAY,EAAZA;AAAF,WAAd,CAAJ;AAAA,SAH9B;AAII,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,EAqBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEqB,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,YAAY,EAAE,sBAAA3B,KAAK;AAAA,iBAAI,MAAI,CAACc,QAAL,CAAc;AAAEd,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAJ;AAAA,SAHvB;AAII,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArBJ,EA+BI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEuB,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEL,MAAM,CAACM,KADlB;AAEI,QAAA,eAAe,MAFnB;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,YAAY,EAAE,sBAAA1B,QAAQ;AAAA,iBAAI,MAAI,CAACa,QAAL,CAAc;AAAEb,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAJ;AAAA,SAJ1B;AAKI,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,QALtB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA/BJ,CAVJ,EAqDI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEoB,MAAM,CAACO,MAAhC;AAAwC,QAAA,OAAO,EAAE,KAAKxB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEyB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CArDJ,EAyDI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBR,UAAAA,SAAS,EAAE;AAAlC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,MAAT;AAAiBG,UAAAA,QAAQ,EAAE;AAA3B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,6CACoC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,UAAU,EAAE,KAAd;AAAqBD,UAAAA,KAAK,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,iBADpC,CADJ,CAzDJ,CADJ;AAiEH;;;;EA3GuClC,KAAK,CAACsC,S;;SAA7BpC,c;AA8GrB,IAAMwB,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7Bb,EAAAA,QAAQ,EAAE;AACNK,IAAAA,KAAK,EAAE,MADD;AAENN,IAAAA,SAAS,EAAE,EAFL;AAGNS,IAAAA,QAAQ,EAAE,EAHJ;AAINF,IAAAA,UAAU,EAAE,KAJN;AAKNQ,IAAAA,SAAS,EAAE;AALL,GALmB;AAY7BnC,EAAAA,YAAY,EAAE;AACVoC,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,gBAAgB,EAAE;AAJR,GAZe;AAkB7B7B,EAAAA,KAAK,EAAE;AACHgB,IAAAA,KAAK,EAAE,SADJ;AAEHG,IAAAA,QAAQ,EAAE,EAFP;AAGHF,IAAAA,UAAU,EAAE,KAHT;AAIHQ,IAAAA,SAAS,EAAE;AAJR,GAlBsB;AAwB7Bb,EAAAA,IAAI,EAAE;AACFkB,IAAAA,YAAY,EAAE,EADZ;AAEFD,IAAAA,gBAAgB,EAAE;AAFhB,GAxBuB;AA4B7BhB,EAAAA,UAAU,EAAE;AACRG,IAAAA,KAAK,EAAE,SADC;AAERG,IAAAA,QAAQ,EAAE,EAFF;AAGRY,IAAAA,aAAa,EAAE;AAHP,GA5BiB;AAiC7BjB,EAAAA,KAAK,EAAE;AACHkB,IAAAA,iBAAiB,EAAE,SADhB;AAEHC,IAAAA,iBAAiB,EAAEZ,UAAU,CAACa,aAF3B;AAGHR,IAAAA,MAAM,EAAE,EAHL;AAIHP,IAAAA,QAAQ,EAAE,EAJP;AAKHH,IAAAA,KAAK,EAAE;AALJ,GAjCsB;AAwC7BD,EAAAA,MAAM,EAAE;AACJc,IAAAA,gBAAgB,EAAE,EADd;AAEJL,IAAAA,eAAe,EAAE,SAFb;AAGJW,IAAAA,YAAY,EAAE,CAHV;AAIJT,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,UAAU,EAAE,QALR;AAMJC,IAAAA,cAAc,EAAE;AANZ;AAxCqB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\nimport * as firebase from \"firebase\";\n\nexport default class RegisterScreen extends React.Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        simstudentno: \"\",\n        errorMessage: null\n    };\n\n    handleSignUp = () => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(userCredentials => {\n                return userCredentials.user.updateProfile({\n                    displayName: this.state.name\n                });\n            })\n            .catch(error => this.setState({ errorMessage: error.message }));\n\n        \n        /*\n            Besides using these credentials for authentication with SIMphony, they will also be \n            inserted into the realtime database for SIMConnect website automation later on. \n        */\n\n        firebase.database().ref('students/ '+ this.state.simstudentno).set(\n            {\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n            }\n\n        ).then(() => {\n            console.log('Inserted!');\n        }).catch((error) => {\n            console.log(error);\n        })\n\n    };\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <View style={{ marginTop: 100 }}></View>\n\n\n                <Text style={styles.greeting}>{`Hey there, new tester!\\nSign up to get started.`}</Text>\n\n                <View style={styles.errorMessage}>\n                    {this.state.errorMessage && <Text style={styles.error}>{this.state.errorMessage}</Text>}\n                </View>\n\n                <View style={styles.form}>\n                    <View>\n                        <Text style={styles.inputTitle}>Full Name</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            onChangeText={name => this.setState({ name })}\n                            value={this.state.name}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>SIM student number (e.g. 10184527)</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            onChangeText={simstudentno => this.setState({ simstudentno })}\n                            value={this.state.simstudentno}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>Email Address</Text>\n                        <TextInput\n                            style={styles.input}\n                            autoCapitalize=\"none\"\n                            onChangeText={email => this.setState({ email })}\n                            value={this.state.email}\n                        ></TextInput>\n                    </View>\n\n                    <View style={{ marginTop: 32 }}>\n                        <Text style={styles.inputTitle}>Password</Text>\n                        <TextInput\n                            style={styles.input}\n                            secureTextEntry\n                            autoCapitalize=\"none\"\n                            onChangeText={password => this.setState({ password })}\n                            value={this.state.password}\n                        ></TextInput>\n                    </View>\n                </View>\n\n                <TouchableOpacity style={styles.button} onPress={this.handleSignUp}>\n                    <Text style={{ color: \"#FFF\", fontWeight: \"500\" }}>Sign up</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={{ alignSelf: \"center\", marginTop: 32 }}>\n                    <Text style={{ color: \"#fff\", fontSize: 13 }}>\n                        Already have an tester account? <Text style={{ fontWeight: \"500\", color: \"#009862\" }}>Login</Text>\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#424242',\n    },\n    greeting: {\n        color: '#fff',\n        marginTop: 32,\n        fontSize: 18,\n        fontWeight: \"400\",\n        textAlign: \"center\"\n    },\n    errorMessage: {\n        height: 72,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginHorizontal: 30\n    },\n    error: {\n        color: \"#E9446A\",\n        fontSize: 13,\n        fontWeight: \"600\",\n        textAlign: \"center\"\n    },\n    form: {\n        marginBottom: 48,\n        marginHorizontal: 30\n    },\n    inputTitle: {\n        color: \"#8A8F9E\",\n        fontSize: 10,\n        textTransform: \"uppercase\"\n    },\n    input: {\n        borderBottomColor: \"#8A8F9E\",\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        height: 40,\n        fontSize: 15,\n        color: \"#161F3D\"\n    },\n    button: {\n        marginHorizontal: 30,\n        backgroundColor: \"#009862\",\n        borderRadius: 4,\n        height: 52,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    }\n});\n"]},"metadata":{},"sourceType":"module"}