{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\haria\\\\SIMphony\\\\src\\\\components\\\\EventCalendar.js\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React from 'react';\nimport styleConstructor from \"./style\";\nimport DayView from \"./DayView\";\n\nvar EventCalendar = function (_React$Component) {\n  _inherits(EventCalendar, _React$Component);\n\n  function EventCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EventCalendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventCalendar).call(this, props));\n\n    _this._previous = function () {\n      _this._goToPage(_this.state.index - 1);\n\n      if (_this.props.dateChanged) {\n        _this.props.dateChanged(moment(_this.props.initDate).add(_this.state.index - 1 - _this.props.size, 'days').format('YYYY-MM-DD'));\n      }\n    };\n\n    _this._next = function () {\n      _this._goToPage(_this.state.index + 1);\n\n      if (_this.props.dateChanged) {\n        _this.props.dateChanged(moment(_this.props.initDate).add(_this.state.index + 1 - _this.props.size, 'days').format('YYYY-MM-DD'));\n      }\n    };\n\n    var start = props.start ? props.start : 0;\n    var end = props.end ? props.end : 24;\n    _this.styles = styleConstructor(props.styles, (end - start) * 100);\n    _this.state = {\n      date: moment(_this.props.initDate),\n      index: _this.props.size\n    };\n    return _this;\n  }\n\n  _createClass(EventCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onRef) {\n        this.props.onRef(this);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onRef) {\n        this.props.onRef(undefined);\n      }\n    }\n  }, {\n    key: \"_getItemLayout\",\n    value: function _getItemLayout(data, index) {\n      var width = this.props.width;\n      return {\n        length: width,\n        offset: width * index,\n        index: index\n      };\n    }\n  }, {\n    key: \"_getItem\",\n    value: function _getItem(events, index) {\n      var date = moment(this.props.initDate).add(index - this.props.size, 'days');\n      return _.filter(events, function (event) {\n        var eventStartTime = moment(event.start);\n        return eventStartTime >= date.clone().startOf('day') && eventStartTime <= date.clone().endOf('day');\n      });\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var index = _ref.index,\n          item = _ref.item;\n      var _this$props = this.props,\n          width = _this$props.width,\n          format24h = _this$props.format24h,\n          initDate = _this$props.initDate,\n          _this$props$scrollToF = _this$props.scrollToFirst,\n          scrollToFirst = _this$props$scrollToF === void 0 ? true : _this$props$scrollToF,\n          _this$props$start = _this$props.start,\n          start = _this$props$start === void 0 ? 0 : _this$props$start,\n          _this$props$end = _this$props.end,\n          end = _this$props$end === void 0 ? 24 : _this$props$end,\n          formatHeader = _this$props.formatHeader,\n          _this$props$upperCase = _this$props.upperCaseHeader,\n          upperCaseHeader = _this$props$upperCase === void 0 ? false : _this$props$upperCase;\n      var date = moment(initDate).add(index - this.props.size, 'days');\n      var leftIcon = this.props.headerIconLeft ? this.props.headerIconLeft : React.createElement(Image, {\n        source: require(\"./back.png\"),\n        style: this.styles.arrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      });\n      var rightIcon = this.props.headerIconRight ? this.props.headerIconRight : React.createElement(Image, {\n        source: require(\"./forward.png\"),\n        style: this.styles.arrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      });\n      var headerText = upperCaseHeader ? date.format(formatHeader || 'DD MMMM YYYY').toUpperCase() : date.format(formatHeader || 'DD MMMM YYYY');\n      return React.createElement(View, {\n        style: [this.styles.container, {\n          width: width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(View, {\n        style: this.styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: this.styles.arrowButton,\n        onPress: this._previous,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      }, leftIcon), React.createElement(View, {\n        style: this.styles.headerTextContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, React.createElement(Text, {\n        style: this.styles.headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, headerText)), React.createElement(TouchableOpacity, {\n        style: this.styles.arrowButton,\n        onPress: this._next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, rightIcon)), React.createElement(DayView, {\n        date: date,\n        index: index,\n        format24h: format24h,\n        formatHeader: this.props.formatHeader,\n        headerStyle: this.props.headerStyle,\n        renderEvent: this.props.renderEvent,\n        eventTapped: this.props.eventTapped,\n        events: item,\n        width: width,\n        styles: this.styles,\n        scrollToFirst: scrollToFirst,\n        start: start,\n        end: end,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        }\n      }));\n    }\n  }, {\n    key: \"_goToPage\",\n    value: function _goToPage(index) {\n      if (index <= 0 || index >= this.props.size * 2) {\n        return;\n      }\n\n      var date = moment(this.props.initDate).add(index - this.props.size, 'days');\n      this.refs.calendar.scrollToIndex({\n        index: index,\n        animated: false\n      });\n      this.setState({\n        index: index,\n        date: date\n      });\n    }\n  }, {\n    key: \"_goToDate\",\n    value: function _goToDate(date) {\n      var earliestDate = moment(this.props.initDate).subtract(this.props.size, 'days');\n      var index = moment(date).diff(earliestDate, 'days');\n\n      this._goToPage(index);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          width = _this$props2.width,\n          virtualizedListProps = _this$props2.virtualizedListProps,\n          events = _this$props2.events,\n          initDate = _this$props2.initDate;\n      return React.createElement(View, {\n        style: [this.styles.container, {\n          width: width\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, React.createElement(VirtualizedList, _extends({\n        ref: \"calendar\",\n        windowSize: 2,\n        initialNumToRender: 2,\n        initialScrollIndex: this.props.size,\n        data: events,\n        getItemCount: function getItemCount() {\n          return _this2.props.size * 2;\n        },\n        getItem: this._getItem.bind(this),\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        getItemLayout: this._getItemLayout.bind(this),\n        horizontal: true,\n        pagingEnabled: true,\n        renderItem: this._renderItem.bind(this),\n        style: {\n          width: width\n        },\n        onMomentumScrollEnd: function onMomentumScrollEnd(event) {\n          var index = parseInt(event.nativeEvent.contentOffset.x / width);\n          var date = moment(_this2.props.initDate).add(index - _this2.props.size, 'days');\n\n          if (_this2.props.dateChanged) {\n            _this2.props.dateChanged(date.format('YYYY-MM-DD'));\n          }\n\n          _this2.setState({\n            index: index,\n            date: date\n          });\n        }\n      }, virtualizedListProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        }\n      })));\n    }\n  }]);\n\n  return EventCalendar;\n}(React.Component);\n\nEventCalendar.defaultProps = {\n  size: 30,\n  initDate: new Date(),\n  formatHeader: 'DD MMMM YYYY'\n};\nexport { EventCalendar as default };","map":{"version":3,"sources":["C:/Users/haria/SIMphony/src/components/EventCalendar.js"],"names":["_","moment","React","styleConstructor","DayView","EventCalendar","props","_previous","_goToPage","state","index","dateChanged","initDate","add","size","format","_next","start","end","styles","date","onRef","undefined","data","width","length","offset","events","filter","event","eventStartTime","clone","startOf","endOf","item","format24h","scrollToFirst","formatHeader","upperCaseHeader","leftIcon","headerIconLeft","require","arrow","rightIcon","headerIconRight","headerText","toUpperCase","container","header","arrowButton","headerTextContainer","headerStyle","renderEvent","eventTapped","refs","calendar","scrollToIndex","animated","setState","earliestDate","subtract","diff","virtualizedListProps","_getItem","bind","toString","_getItemLayout","_renderItem","parseInt","nativeEvent","contentOffset","x","Component","defaultProps","Date"],"mappings":"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","sourcesContent":["// @flow\nimport {\n  VirtualizedList,\n  View,\n  TouchableOpacity,\n  Image,\n  Text,\n} from 'react-native';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React from 'react';\n\nimport styleConstructor from './style';\n\nimport DayView from './DayView';\n\nexport default class EventCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const start = props.start ? props.start : 0;\n    const end = props.end ? props.end : 24;\n\n    this.styles = styleConstructor(props.styles, (end - start) * 100);\n    this.state = {\n      date: moment(this.props.initDate),\n      index: this.props.size,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.onRef) {\n      this.props.onRef(this);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.onRef) {\n      this.props.onRef(undefined);\n    }\n  }\n\n  static defaultProps = {\n    size: 30,\n    initDate: new Date(),\n    formatHeader: 'DD MMMM YYYY',\n  };\n\n  _getItemLayout(data, index) {\n    const { width } = this.props;\n    return { length: width, offset: width * index, index };\n  }\n\n  _getItem(events, index) {\n    const date = moment(this.props.initDate).add(\n      index - this.props.size,\n      'days'\n    );\n    return _.filter(events, event => {\n      const eventStartTime = moment(event.start);\n      return (\n        eventStartTime >= date.clone().startOf('day') &&\n        eventStartTime <= date.clone().endOf('day')\n      );\n    });\n  }\n\n  _renderItem({ index, item }) {\n    const {\n      width,\n      format24h,\n      initDate,\n      scrollToFirst = true,\n      start = 0,\n      end = 24,\n      formatHeader,\n      upperCaseHeader = false,\n    } = this.props;\n    const date = moment(initDate).add(index - this.props.size, 'days');\n\n    const leftIcon = this.props.headerIconLeft ? (\n        this.props.headerIconLeft\n    ) : (\n        <Image source={require('./back.png')} style={this.styles.arrow} />\n    );\n    const rightIcon = this.props.headerIconRight ? (\n        this.props.headerIconRight\n    ) : (\n        <Image source={require('./forward.png')} style={this.styles.arrow} />\n    );\n\n    let headerText = upperCaseHeader\n        ? date.format(formatHeader || 'DD MMMM YYYY').toUpperCase()\n        : date.format(formatHeader || 'DD MMMM YYYY');\n\n    return (\n      <View style={[this.styles.container, { width }]}>\n        <View style={this.styles.header}>\n          <TouchableOpacity\n              style={this.styles.arrowButton}\n              onPress={this._previous}\n          >\n            {leftIcon}\n          </TouchableOpacity>\n          <View style={this.styles.headerTextContainer}>\n            <Text style={this.styles.headerText}>{headerText}</Text>\n          </View>\n          <TouchableOpacity\n              style={this.styles.arrowButton}\n              onPress={this._next}\n          >\n            {rightIcon}\n          </TouchableOpacity>\n        </View>\n        <DayView\n          date={date}\n          index={index}\n          format24h={format24h}\n          formatHeader={this.props.formatHeader}\n          headerStyle={this.props.headerStyle}\n          renderEvent={this.props.renderEvent}\n          eventTapped={this.props.eventTapped}\n          events={item}\n          width={width}\n          styles={this.styles}\n          scrollToFirst={scrollToFirst}\n          start={start}\n          end={end}\n        />\n      </View>\n    );\n  }\n\n  _goToPage(index) {\n    if (index <= 0 || index >= this.props.size * 2) {\n      return;\n    }\n    const date = moment(this.props.initDate).add(\n      index - this.props.size,\n      'days'\n    );\n    this.refs.calendar.scrollToIndex({ index, animated: false });\n    this.setState({ index, date });\n  }\n\n  _goToDate(date) {\n    const earliestDate = moment(this.props.initDate).subtract(\n      this.props.size,\n      'days'\n    );\n    const index = moment(date).diff(earliestDate, 'days');\n    this._goToPage(index);\n  }\n\n  _previous = () => {\n    this._goToPage(this.state.index - 1);\n    if (this.props.dateChanged) {\n      this.props.dateChanged(\n        moment(this.props.initDate)\n          .add(this.state.index - 1 - this.props.size, 'days')\n          .format('YYYY-MM-DD')\n      );\n    }\n  };\n\n  _next = () => {\n    this._goToPage(this.state.index + 1);\n    if (this.props.dateChanged) {\n      this.props.dateChanged(\n        moment(this.props.initDate)\n          .add(this.state.index + 1 - this.props.size, 'days')\n          .format('YYYY-MM-DD')\n      );\n    }\n  };\n\n  render() {\n    const {\n      width,\n      virtualizedListProps,\n      events,\n      initDate,\n    } = this.props;\n\n    return (\n      <View style={[this.styles.container, { width }]}>\n        <VirtualizedList\n          ref=\"calendar\"\n          windowSize={2}\n          initialNumToRender={2}\n          initialScrollIndex={this.props.size}\n          data={events}\n          getItemCount={() => this.props.size * 2}\n          getItem={this._getItem.bind(this)}\n          keyExtractor={(item, index) => index.toString()}\n          getItemLayout={this._getItemLayout.bind(this)}\n          horizontal\n          pagingEnabled\n          renderItem={this._renderItem.bind(this)}\n          style={{ width: width }}\n          onMomentumScrollEnd={event => {\n            const index = parseInt(event.nativeEvent.contentOffset.x / width);\n            const date = moment(this.props.initDate).add(\n              index - this.props.size,\n              'days'\n            );\n            if (this.props.dateChanged) {\n              this.props.dateChanged(date.format('YYYY-MM-DD'));\n            }\n            this.setState({ index, date });\n          }}\n          {...virtualizedListProps}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}