{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\haria\\\\SIMphony\\\\src\\\\pages\\\\LoadingScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as firebase from \"firebase\";\n\nvar LoadingScreen = function (_React$Component) {\n  _inherits(LoadingScreen, _React$Component);\n\n  function LoadingScreen() {\n    _classCallCheck(this, LoadingScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoadingScreen).apply(this, arguments));\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this.props.navigation.navigate(user ? \"App\" : \"Auth\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        }\n      }, \"Loading...\"), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(React.Component);\n\nexport { LoadingScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: '#424242'\n  }\n});","map":{"version":3,"sources":["C:/Users/haria/SIMphony/src/pages/LoadingScreen.js"],"names":["React","firebase","LoadingScreen","auth","onAuthStateChanged","user","props","navigation","navigate","styles","container","color","Component","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;IAEqBC,a;;;;;;;;;;;wCACG;AAAA;;AAChBD,MAAAA,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACvC,QAAA,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+BH,IAAI,GAAG,KAAH,GAAW,MAA9C;AACH,OAFD;AAGH;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAdsCX,KAAK,CAACY,S;;SAA5BV,a;AAiBrB,IAAMO,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,eAAe,EAAE;AAJV;AADkB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, ActivityIndicator } from \"react-native\";\nimport * as firebase from \"firebase\";\n\nexport default class LoadingScreen extends React.Component {\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            this.props.navigation.navigate(user ? \"App\" : \"Auth\");\n        });\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Text style = {{color: '#fff'}}>Loading...</Text>\n                <ActivityIndicator size=\"large\"></ActivityIndicator>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: '#424242',\n    }\n});\n"]},"metadata":{},"sourceType":"module"}